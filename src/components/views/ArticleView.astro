---
  import defaultImage from '$assets/article-default.jpg';
  import StoryMeta from '$components/StoryMeta.svelte';
  import Footer from '$components/Footer.svelte';
  import { colorSet } from '$components/utils/colors';

  const { title, firstName, lastName, year, organ, date, story, qrCode=`${import.meta.env.BASE_URL}qr-code.png`, image = defaultImage } = Astro.props;

---

<article id="story" class="story" style={`--bottom-color: ${colorSet[0]}; --top-color: ${colorSet[1]}`}>

  <div class="story__container">
		<div class="cover">
      <img id="Image" alt="" class="cover__img" src={image} />
    </div>

		<div id="Content" class="row">

      <StoryMeta class="meta" firstName={firstName} lastName={lastName} year={year} organ={organ} date={date} topColor="var(--top-color)" bottomColor="var(--bottom-color)" client:load>
        {title ? title : null}
      </StoryMeta>

			<section id="Story" class="story__content">
        <Fragment set:html={story}/>
      </section>

		</div>
	</div>

  <Footer topColor="var(--top-color)" qrCode={qrCode} bottomColor="var(--bottom-color)"></Footer>

</article>

<script>
  import { animateColors } from '$components/utils/colors.js';
  import state from '$components/utils/state.js';

  const img = document.getElementById('image');

  state.subscribe((value) => {
    if (value.image) {img.setAttribute('src', value.image)}
  });

  const animation = animateColors({ el: document.querySelector('#story'), offset: 2 });
  if (typeof window !== 'undefined') window.ANIM = animation;
</script>

<style lang="scss">
  @import 'src/styles/_functions.scss';

  article {
    --animation-length: 3s;
    color: #4b5155;
    width: 100%;
    aspect-ratio: 9/16;
    overflow: hidden;
    background-color: white;
    position: relative;
  }

  :global(p + p) {
    margin-top: space(1.5);
  }

  .row {
    padding: 0 space(4);
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: space(3);
    height: 100%;
    margin: 0 auto;
  }

  .cover {
    aspect-ratio: 8/6;
    width: 100%;
    animation: fade-in var(--animation-length) ease-out normal both;
    overflow: hidden;
  }

  .cover__img {
    display: block;
    max-width: 100%;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transform: scale(1.1);
    animation: shrink-in calc(var(--animation-length) * 4) ease-out normal forwards;
  }

  :global(.meta) {
    margin-top: -50%;
    animation: fade-in calc(var(--animation-length) * .5) calc(var(--animation-length) * .75) ease-out normal both;
    --animation-length: calc(var(--animation-length) * 1);
  }

  :global(.story__content > *) {
    position: relative;
  }

  .story__content {
    font-size: 1rem;
    line-height: rem($space);
    letter-spacing: 0.02em;
    padding-top: space(3);
    height: 100%;
    animation: fade-in calc(var(--animation-length) * .5) calc(var(--animation-length) * .75) ease-out normal both;
  }

  .story__content:after {
    position:absolute;
    bottom: 0;
    content:'';
    width: 100%;
    height: space(18);
    background-color: white;
  }

  .story__content :global(a),
  .story__content :global(a:any-link) {
    color: inherit;
    text-decoration: none;
  }

  .story__content :global(p:first-child:first-letter) {
    float: left;
    font-family: 'bennet-banner';
    font-weight: 900;
    font-size: space(7);
    margin-right: .1em;
    margin-left: -.25em;
    color: var(--bottom-color);
    filter: brightness(50%);
    line-height: space(5);
    padding-top: space(.5);
  }

</style>
